{"version":3,"sources":["services/movieApi.js","components/MovieCard/MovieCard.module.css","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/MovieCard/MovieCard.js","components/MovieDetailsPageBar/MovieDetailsPageBar.js","components/Cast/Cast.js","components/Reviews/Reviews.js","views/MovieDetailesPage/MovieDetailesPage.js"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","get","then","response","data","results","fetchMovieByQuery","searchQuery","fetchMovieDetails","movieId","fetchMovieCastDetails","fetchMovieReviews","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MovieCard","posterImg","title","releaseDate","voteAverage","overview","genres","className","s","PosterImg","src","alt","Descr","map","name","join","withRouter","match","exact","to","url","NavLink","activeClassName","Cast","state","cast","this","props","params","movieApi","setState","catch","error","id","character","profile_path","Component","Reviews","reviews","author","content","MovieDetailsPage","poster_path","release_date","vote_average","handleGoBack","history","location","from","routes","home","slice","type","onClick","path","component"],"mappings":"yIAAA,qBAGMA,EAAW,+BACXC,EAAU,mCA8BD,KACXC,oBA7BwB,WACxB,OAAOC,IACFC,IADE,UACKJ,EADL,qCAC0CC,IAC5CI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YA2BpCC,kBAxBsB,SAACC,GACvB,OAAOP,IACFC,IADE,UACKJ,EADL,+BACoCU,EADpC,oBAC2DT,IAC5DI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,YAsBrCG,kBAnBsB,SAACC,GACvB,OAAOT,IACFC,IADE,UACKJ,EADL,kBACuBY,EADvB,oBAC0CX,KAkBjDY,sBAf0B,SAACD,GAC3B,OAAOT,IACFC,IADE,UACKJ,EADL,kBACuBY,EADvB,4BACkDX,EADlD,qBAePa,kBAXsB,SAACF,GACvB,OAAOT,IACFC,IADE,UACKJ,EADL,kBACuBY,EADvB,4BACkDX,EADlD,uB,mBC5BXc,EAAOC,QAAU,CAAC,UAAY,6BAA6B,UAAY,6BAA6B,MAAQ,2B,qDCD7F,SAASC,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,yFCEMQ,EA9BG,SAAC,GAAsE,IAApEC,EAAmE,EAAnEA,UAAWC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OACvE,OACI,mCACI,sBAAKC,UAAWC,IAAER,UAAlB,UACE,qBAAKO,UAAWC,IAAEC,UAAlB,SACE,qBAAKC,IAAKT,EAAWU,IAAKT,MAE5B,sBAAKK,UAAWC,IAAEI,MAAlB,UACE,uCAAQV,EAAR,aAAkBC,EAAlB,OACA,6CAA8B,GAAdC,EAAhB,OACA,0CACA,4BAAIC,IACHC,GAAQ,wCACRA,EAAOO,KAAI,qBAAGC,QAAiBC,KAAK,c,wBCiBrCC,eA/BY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAE3B,OACI,oCACI,wDACA,+BACI,6BACI,cAAC,IAAD,CACAC,OAAK,EACLC,GAAE,UAAKF,EAAMG,IAAX,SACFb,UAAWC,IAAEa,QACbC,gBAAgB,kBAJhB,oBASJ,6BACI,cAAC,IAAD,CACAH,GAAE,UAAKF,EAAMG,IAAX,YACFb,UAAWC,IAAEa,QACbC,gBAAgB,kBAHhB,gCCsBLC,E,4MAvCXC,MAAQ,CACJC,KAAM,I,uDAGV,WAAqB,IAAD,OACR3D,EAAY4D,KAAKC,MAAMV,MAAMW,OAA7B9D,QAER+D,IAAS9D,sBAAsBD,GAC1BP,MAAK,SAAAC,GAAQ,OACV,EAAKsE,SAAS,CACVL,KAAMjE,EAASC,KAAKgE,UAG3BM,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,e,oBAGxC,WACI,IAAQP,EAASC,KAAKF,MAAdC,KACR,OACI,mCACI,6BACKA,EAAKZ,KAAI,gBAAGoB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWpB,EAAlB,EAAkBA,KAAMqB,EAAxB,EAAwBA,aAAxB,OACN,+BACKA,GACG,qBACIzB,IAAG,yCAAoCyB,GACvCxB,IAAKG,IAGb,6BAAKA,IACL,4CAAeoB,OARVD,c,GAvBdG,aCsCJC,E,4MArCXb,MAAQ,CACJc,QAAS,I,uDAGb,WAAqB,IAAD,OACRxE,EAAY4D,KAAKC,MAAMV,MAAMW,OAA7B9D,QAER+D,IAAS7D,kBAAkBF,GACtBP,MAAK,SAAAC,GAAQ,OACV,EAAKsE,SAAS,CACVQ,QAAS9E,EAASC,KAAKC,aAG9BqE,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,e,oBAGxC,WACI,IAAQM,EAAYZ,KAAKF,MAAjBc,QAER,OACI,mCACwB,IAAnBA,EAAQ3C,OACL,6BACK2C,EAAQzB,KAAI,gBAAGoB,EAAH,EAAGA,GAAIM,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,+BACI,2CAAcD,KACd,kCAAKC,OAFAP,QAMjB,iF,GA/BEG,a,QCOhBK,E,4MACFjB,MAAQ,CACJkB,YAAa,KACbxC,MAAO,KACPyC,aAAa,KACbC,aAAc,KACdvC,SAAU,KACVC,OAAO,I,EAoBXuC,aAAe,WACX,MAA8B,EAAKlB,MAA3BmB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAEjB,GAAIA,EAASvB,OAASuB,EAASvB,MAAMwB,KACjC,OAAQF,EAAQzD,KAAK0D,EAASvB,MAAMwB,MAExCF,EAAQzD,KAAK4D,IAAOC,O,uDAtBxB,WAAqB,IAAD,OACRpF,EAAY4D,KAAKC,MAAMV,MAAMW,OAA7B9D,QAER+D,IAAShE,kBAAkBC,GACtBP,MAAK,SAAAC,GAAQ,OACV,EAAKsE,SAAL,OACOtE,EAASC,MADhB,IAEIiF,YAAY,kCAAD,OACXlF,EAASC,KAAKiF,aAAelF,EAASC,KAAKiF,aAE3CC,aAAcnF,EAASC,KAAKkF,aAAaQ,MAAM,EAAG,SAGzDpB,OAAM,SAAAC,GAAK,OAAI,EAAKF,SAAS,CAAEE,e,oBAYxC,WACI,IAAQf,EAASS,KAAKC,MAAdV,MACR,EAA4ES,KAAKF,MAAzEkB,EAAR,EAAQA,YAAaxC,EAArB,EAAqBA,MAAOyC,EAA5B,EAA4BA,aAAcC,EAA1C,EAA0CA,aAAcvC,EAAxD,EAAwDA,SAAUC,EAAlE,EAAkEA,OAElE,OACI,gCACI,wBAAQ8C,KAAK,SAASC,QAAS3B,KAAKmB,aAApC,qBAGA,cAAC,EAAD,CAAW5C,UAAWyC,EAAaxC,MAAOA,EAAOC,YAAawC,EAAcvC,YAAawC,EAAcvC,SAAUA,EAAUC,OAAQA,IACnI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOY,OAAK,EAACoC,KAAI,UAAKrC,EAAMqC,KAAX,SAAwBC,UAAWhC,IACpD,cAAC,IAAD,CAAO+B,KAAI,UAAKrC,EAAMqC,KAAX,YAA2BC,UAAWlB,c,GAjDtCD,aAwDhBK","file":"static/js/movie-detailes-view.f5a5fedf.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//https://newsuperserver.herokuapp.com/\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '14e8b908038de65f12cfd2170a086156';\r\n\r\nconst fetchTrendingMovies = () => {\r\n    return axios\r\n        .get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`)\r\n        .then(response => response.data.results);\r\n}\r\n\r\nconst fetchMovieByQuery = (searchQuery) => {\r\n    return axios\r\n        .get(`${BASE_URL}/search/movie?query=${searchQuery}&api_key=${API_KEY}`)\r\n         .then(response => response.data.results);\r\n}\r\n\r\nconst fetchMovieDetails = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\r\n}\r\n\r\nconst fetchMovieCastDetails = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\r\n}\r\n\r\nconst fetchMovieReviews = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    fetchTrendingMovies,\r\n    fetchMovieByQuery,\r\n    fetchMovieDetails,\r\n    fetchMovieCastDetails,\r\n    fetchMovieReviews\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MovieCard\":\"MovieCard_MovieCard__k8nR0\",\"PosterImg\":\"MovieCard_PosterImg__3RxIx\",\"Descr\":\"MovieCard_Descr__2as-2\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './MovieCard.module.css';\r\n\r\n\r\nconst MovieCard = ({ posterImg, title, releaseDate, voteAverage, overview, genres }) => {\r\n    return (\r\n        <>\r\n            <div className={s.MovieCard}>\r\n              <div className={s.PosterImg}>\r\n                <img src={posterImg} alt={title} />\r\n              </div>\r\n              <div className={s.Descr}>\r\n                <h2>{`${title} (${releaseDate})`}</h2>\r\n                <p>User Score: {voteAverage * 10}%</p>\r\n                <h3>Overview</h3>\r\n                <p>{overview}</p>\r\n                {genres&&<h3>Genres</h3>}\r\n                {genres.map(({ name }) => name).join(' ')}\r\n              </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nMovieCard.propTypes = {\r\n    results: PropTypes.arrayOf(PropTypes.shape({\r\n        releaseDate: PropTypes.number.isRequired,\r\n        posterImg: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        voteAverage: PropTypes.number.isRequired,\r\n        genres: PropTypes.array,\r\n    }))\r\n}\r\n\r\nexport default MovieCard","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport s from './MovieDetailsPageBar.module.css';\r\n\r\nconst MovieDetailsPageBar = ({ match }) => {\r\n\r\n    return (\r\n        <section>\r\n            <h3>Additional information</h3>\r\n            <ul>\r\n                <li>\r\n                    <NavLink\r\n                    exact\r\n                    to={`${match.url}/cast`}\r\n                    className={s.NavLink}\r\n                    activeClassName=\"NavLink--active\"\r\n                >\r\n                    Cast\r\n                </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink\r\n                    to={`${match.url}/reviews`}\r\n                    className={s.NavLink}\r\n                    activeClassName=\"NavLink--active\"\r\n                >\r\n                    Reviews\r\n                </NavLink>  \r\n                </li>\r\n\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default  withRouter(MovieDetailsPageBar) ","import React, { Component } from 'react';\r\nimport movieApi from '../../services/movieApi';\r\n\r\nclass Cast extends Component{\r\n    state = {\r\n        cast: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { movieId } = this.props.match.params;\r\n        \r\n        movieApi.fetchMovieCastDetails(movieId)\r\n            .then(response =>\r\n                this.setState({\r\n                    cast: response.data.cast\r\n                }),\r\n            )\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n    \r\n    render() {\r\n        const { cast } = this.state;\r\n        return (\r\n            <>\r\n                <ul>\r\n                    {cast.map(({ id, character, name, profile_path }) => (\r\n                        <li key={id}>\r\n                            {profile_path && (\r\n                                <img\r\n                                    src={`https://image.tmdb.org/t/p/w200${profile_path}`}\r\n                                    alt={name}\r\n                                />\r\n                            )}\r\n                            <h2>{name}</h2>\r\n                            <p>Character: {character}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cast","import React, { Component } from 'react';\r\nimport movieApi from '../../services/movieApi';\r\n\r\nclass Reviews extends Component{\r\n    state = {\r\n        reviews: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { movieId } = this.props.match.params;\r\n        \r\n        movieApi.fetchMovieReviews(movieId)\r\n            .then(response =>\r\n                this.setState({\r\n                    reviews: response.data.results\r\n                }),\r\n            )\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n    \r\n    render() {\r\n        const { reviews } = this.state;\r\n\r\n        return (\r\n            <>\r\n                {reviews.length !== 0 ? (\r\n                    <ul>\r\n                        {reviews.map(({ id, author, content }) => (\r\n                            <li key={id}>\r\n                                <h3> Author: {author}</h3>\r\n                                <p> {content}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul> ):(\r\n                    <p> We don't have any reviews for this movie </p>\r\n                    )}\r\n            < />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reviews","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport movieApi from '../../services/movieApi';\r\nimport MovieCard from '../../components/MovieCard';\r\nimport MovieDetailsPageBar from '../../components/MovieDetailsPageBar';\r\nimport Cast from '../../components/Cast';\r\nimport Reviews from '../../components/Reviews';\r\nimport routes from '../../routes';\r\n\r\n\r\nclass MovieDetailsPage extends Component {\r\n    state = {\r\n        poster_path: null,\r\n        title: null,\r\n        release_date:null,\r\n        vote_average: null,\r\n        overview: null,\r\n        genres:[],\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { movieId } = this.props.match.params;\r\n        \r\n        movieApi.fetchMovieDetails(movieId)\r\n            .then(response =>\r\n                this.setState({\r\n                    ...response.data,\r\n                    poster_path: `https://image.tmdb.org/t/p/w300${\r\n                    response.data.poster_path && response.data.poster_path\r\n                    }`,\r\n                    release_date: response.data.release_date.slice(0, 4),\r\n                }),\r\n            )\r\n            .catch(error => this.setState({ error }));\r\n    }\r\n\r\n    handleGoBack = () => {\r\n        const { history, location } = this.props;\r\n\r\n        if (location.state && location.state.from) {\r\n            return  history.push(location.state.from)\r\n        }\r\n        history.push(routes.home)       \r\n    }\r\n\r\n    render() {\r\n        const { match} = this.props;\r\n        const { poster_path, title, release_date, vote_average, overview, genres} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <button type=\"button\" onClick={this.handleGoBack}>\r\n                    Go back\r\n                </button>\r\n                <MovieCard posterImg={poster_path} title={title} releaseDate={release_date} voteAverage={vote_average} overview={overview} genres={genres} />\r\n                <MovieDetailsPageBar />\r\n                <Switch>\r\n                    <Route exact path={`${match.path}/cast`} component={Cast} />\r\n                    <Route path={`${match.path}/reviews`} component={Reviews} /> \r\n                </Switch>\r\n            </div>)\r\n      \r\n    }\r\n}\r\n\r\nexport default MovieDetailsPage"],"sourceRoot":""}