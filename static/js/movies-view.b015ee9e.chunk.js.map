{"version":3,"sources":["services/movieApi.js","components/MovieList/MovieList.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/SearchMovies/SearchMovies.js","views/MoviesPage/MoviesPage.js"],"names":["BASE_URL","API_KEY","fetchTrendingMovies","axios","get","then","response","data","results","fetchMovieByQuery","searchQuery","fetchMovieDetails","movieId","fetchMovieCastDetails","fetchMovieReviews","withRouter","movies","location","map","id","title","name","to","pathname","state","from","_arrayLikeToArray","arr","len","length","i","arr2","Array","_toConsumableArray","isArray","iter","Symbol","iterator","Object","o","minLen","n","prototype","toString","call","slice","constructor","test","TypeError","SearchMovies","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","className","s","SearchForm","SearchFormInput","type","autoComplete","autoFocus","onChange","SearchFormButton","SearchFormButtonLabel","Component","MoviesPage","isLoading","error","onChangeQuery","history","push","search","trim","fetchMovies","movieApi","prevState","catch","finally","prevProps","MovieList","Loader"],"mappings":"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","file":"static/js/movies-view.b015ee9e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//https://newsuperserver.herokuapp.com/\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '14e8b908038de65f12cfd2170a086156';\r\n\r\nconst fetchTrendingMovies = () => {\r\n    return axios\r\n        .get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`)\r\n        .then(response => response.data.results);\r\n}\r\n\r\nconst fetchMovieByQuery = (searchQuery) => {\r\n    return axios\r\n        .get(`${BASE_URL}/search/movie?query=${searchQuery}&api_key=${API_KEY}`)\r\n         .then(response => response.data.results);\r\n}\r\n\r\nconst fetchMovieDetails = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\r\n}\r\n\r\nconst fetchMovieCastDetails = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\r\n}\r\n\r\nconst fetchMovieReviews = (movieId) => {\r\n    return axios\r\n        .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`)\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    fetchTrendingMovies,\r\n    fetchMovieByQuery,\r\n    fetchMovieDetails,\r\n    fetchMovieCastDetails,\r\n    fetchMovieReviews\r\n}","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\n\r\nconst MovieList = ({ movies, location }) => {\r\n\r\n  return (\r\n    <ul>\r\n      {movies.map(({ id, title,name }) => (\r\n        <li key={id}>\r\n          <NavLink\r\n            to={{\r\n              pathname: `/movies/${id}`,\r\n              state: { from: location },\r\n            }}>\r\n            {title || name}\r\n          </NavLink>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieList);\r\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { Component } from 'react';\r\nimport s from \"./SearchMovies.module.css\";\r\n\r\nclass SearchMovies extends Component{\r\n    state = {\r\n        query: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({query:e.currentTarget.value \r\n        })\r\n    }\r\n\r\n     handleSubmit = e => {\r\n         e.preventDefault();\r\n\r\n         this.props.onSubmit(this.state.query)\r\n         this.setState({query:''})\r\n    }\r\n\r\n    render() {\r\n        const { query } = this.state;\r\n        return (\r\n            <>\r\n                <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n                    <input\r\n                    className={s.SearchFormInput}\r\n                    value={query}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    onChange={this.handleChange}\r\n                    />\r\n                     <button type=\"submit\" className={s.SearchFormButton}>\r\n                        <span className={s.SearchFormButtonLabel}>Search</span>\r\n                    </button>\r\n                </form>\r\n            </>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchMovies","import React, { Component } from \"react\";\r\n\r\nimport SearchMovies from \"../../components/SearchMovies\";\r\nimport MovieList from '../../components/MovieList';\r\nimport movieApi from '../../services/movieApi';\r\nimport LoaderData from \"../../components/Loader\";\r\n\r\n\r\nclass MoviesPage extends Component {\r\n    state = {\r\n        movies: [],\r\n        searchQuery: '',\r\n        isLoading: false,\r\n        error:null,\r\n    };\r\n  \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.searchQuery !== this.state.searchQuery) {\r\n            this.fetchMovies();\r\n        }\r\n    }\r\n  \r\n    onChangeQuery = query => {\r\n        const { history, location } = this.props;\r\n\r\n        history.push({\r\n            pathname: location.pathname,\r\n            search: `query=${this.state.searchQuery.trim()}`,\r\n    });\r\n        this.setState({\r\n            searchQuery: query,\r\n            isLoading: false,\r\n            error:null,\r\n        });\r\n    \r\n    }\r\n\r\n    fetchMovies = () => {\r\n       \r\n        const { searchQuery } = this.state;\r\n        this.setState({ isLoading: true });\r\n\r\n        movieApi.fetchMovieByQuery(searchQuery)\r\n            .then(results => {\r\n                this.setState(prevState => ({\r\n                    movies: [...prevState.movies, ...results],\r\n                }))\r\n            })\r\n            .catch(error => this.setState({ error }))\r\n            .finally(() => this.setState({ isLoading: false }));\r\n    }\r\n  \r\n    render() {\r\n        const { movies, isLoading, error } = this.state;\r\n        return (\r\n            <>\r\n                <SearchMovies onSubmit={this.onChangeQuery} />\r\n                {error&&<p>There was a problem with your request! Please, try again</p>}\r\n                <MovieList movies={movies} />\r\n                {isLoading && <LoaderData />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviesPage;\r\n\r\n"],"sourceRoot":""}